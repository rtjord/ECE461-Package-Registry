AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: AWS SAM template for Lambda functions and API Gateway

Resources:
  MyApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Stage
      EndpointConfiguration: REGIONAL
  
  MyOpenSearchDomain:
    Type: AWS::OpenSearchService::Domain
    Properties:
      DomainName: package-readmes
      EngineVersion: 'OpenSearch_2.17'
      ClusterConfig:
        InstanceType: t3.small.search
        InstanceCount: 1
      EBSOptions:
        EBSEnabled: true
        VolumeSize: 10 # Size in GiB
        VolumeType: gp2
      AccessPolicies:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: !GetAtt PackageCreateUpdateRole.Arn
            Action: "es:*"
            Resource: !Sub "arn:aws:es:${AWS::Region}:${AWS::AccountId}:domain/package-readmes/*"
      EncryptionAtRestOptions:
        Enabled: true
      NodeToNodeEncryptionOptions:
        Enabled: true

  CreateIndexRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns: # Attach AWS Managed Policies
        - arn:aws:iam::aws:policy/AmazonOpenSearchServiceFullAccess
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  CreateIndex:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      Runtime: nodejs18.x
      CodeUri: ./dist/handlers/CreateIndex
      Timeout: 120
      Layers:
        - !Ref DependenciesLayer
      Role: !GetAtt CreateIndexRole.Arn
      Environment:
        Variables:
          DOMAIN_ENDPOINT: !GetAtt MyOpenSearchDomain.DomainEndpoint
  
  CreateIndexCustomResource:
    Type: Custom::CreateIndex
    Properties:
      ServiceToken: !GetAtt CreateIndex.Arn

  PackageCreateUpdateRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns: # Attach AWS Managed Policies
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/AmazonOpenSearchServiceFullAccess
        - arn:aws:iam::aws:policy/SecretsManagerReadWrite
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  DependenciesLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: DependenciesLayer
      ContentUri: ./layers/dependencies
      CompatibleRuntimes:
        - nodejs18.x


  PackageMetadataTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: PackageMetadata
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: ID
          AttributeType: S
        - AttributeName: PackageName
          AttributeType: S
        - AttributeName: Version
          AttributeType: S
      KeySchema:
        - AttributeName: ID
          KeyType: HASH # Partition Key
      GlobalSecondaryIndexes:
        - IndexName: PackageNameVersionIndex
          KeySchema:
            - AttributeName: PackageName
              KeyType: HASH # Partition Key for the GSI
            - AttributeName: Version
              KeyType: RANGE # Sort Key for the GSI
          Projection:
            ProjectionType: ALL

  PackageHistoryTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: PackageHistoryTable
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: PackageName
          AttributeType: S
        - AttributeName: Date
          AttributeType: S
      KeySchema:
        - AttributeName: PackageName
          KeyType: HASH # Partition key
        - AttributeName: Date
          KeyType: RANGE # Sort key

  PackageBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "package-files-${Stage}"
      AccessControl: Private

  PackagesList:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      Runtime: nodejs18.x
      CodeUri: dist/handlers/PackagesList
      MemorySize: 256
      Timeout: 60
      Layers:
        - !Ref DependenciesLayer
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /packages
            Method: post
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref PackageMetadataTable

  RegistryResetRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns: # Attach AWS Managed Policies
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/AmazonOpenSearchServiceFullAccess
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole


  RegistryReset:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      Runtime: nodejs18.x
      CodeUri: dist/handlers/RegistryReset
      MemorySize: 128
      Timeout: 30
      Layers:
        - !Ref DependenciesLayer
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /reset
            Method: delete
      Environment:
        Variables:
          S3_BUCKET_NAME: !Sub "package-files-${Stage}"
          DOMAIN_ENDPOINT: !GetAtt MyOpenSearchDomain.DomainEndpoint
      Role: !GetAtt RegistryResetRole.Arn

  PackageRetrieve:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      Runtime: nodejs18.x
      CodeUri: dist/handlers/PackageRetrieve
      MemorySize: 128
      Timeout: 30
      Layers:
        - !Ref DependenciesLayer
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /package/{id}
            Method: get
            RequestParameters:
              method.request.path.id: true
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref PackageMetadataTable
        - DynamoDBCrudPolicy:
            TableName: !Ref PackageHistoryTable
        - S3ReadPolicy:
            BucketName: !Ref PackageBucket
      Environment:
        Variables:
          S3_BUCKET_NAME: !Sub "package-files-${Stage}"

  PackageUpdate:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      Runtime: nodejs18.x
      CodeUri: dist/handlers/PackageUpdate
      MemorySize: 128
      Timeout: 120
      Layers:
        - !Ref DependenciesLayer
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /package/{id}
            Method: post
      Environment:
        Variables:
          S3_BUCKET_NAME: !Sub "package-files-${Stage}"
          DOMAIN_ENDPOINT: !GetAtt MyOpenSearchDomain.DomainEndpoint
      Role: !GetAtt PackageCreateUpdateRole.Arn

  PackageDeleteRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns: # Attach AWS Managed Policies
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/AmazonOpenSearchServiceFullAccess
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  PackageDelete:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      Runtime: nodejs18.x
      CodeUri: dist/handlers/PackageDelete
      MemorySize: 128
      Timeout: 30
      Layers:
        - !Ref DependenciesLayer
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /package/{id}
            Method: delete
      Role: !GetAtt PackageDeleteRole.Arn
      Environment:
        Variables:
          S3_BUCKET_NAME: !Sub "package-files-${Stage}"
          DOMAIN_ENDPOINT: !GetAtt MyOpenSearchDomain.DomainEndpoint


  PackageCreate:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      Runtime: nodejs18.x
      CodeUri: dist/handlers/PackageCreate
      MemorySize: 1024
      Timeout: 120
      Layers:
        - !Ref DependenciesLayer
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /package
            Method: post
      Role: !GetAtt PackageCreateUpdateRole.Arn
      Environment:
        Variables:
          S3_BUCKET_NAME: !Sub "package-files-${Stage}"
          DOMAIN_ENDPOINT: !GetAtt MyOpenSearchDomain.DomainEndpoint

  PackageRate:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      Runtime: nodejs18.x
      CodeUri: dist/handlers/PackageRate
      MemorySize: 128
      Timeout: 30
      Layers:
        - !Ref DependenciesLayer
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /package/{id}/rate
            Method: get
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref PackageMetadataTable

  GetCostRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns: # Attach AWS Managed Policies
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
        - arn:aws:iam::aws:policy/AmazonOpenSearchServiceFullAccess
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  GetCost:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      Runtime: nodejs18.x
      CodeUri: dist/handlers/GetCost
      MemorySize: 128
      Timeout: 180
      Layers:
        - !Ref DependenciesLayer
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /package/{id}/cost
            Method: get
      Role: !GetAtt GetCostRole.Arn
      Environment:
        Variables:
          DOMAIN_ENDPOINT: !GetAtt MyOpenSearchDomain.DomainEndpoint

  CreateAuthToken:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      Runtime: nodejs18.x
      CodeUri: dist/handlers/CreateAuthToken
      MemorySize: 128
      Timeout: 30
      Layers:
        - !Ref DependenciesLayer
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /authenticate
            Method: put

  PackageByNameGet:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      Runtime: nodejs18.x
      CodeUri: dist/handlers/PackageByNameGet
      MemorySize: 128
      Timeout: 30
      Layers:
        - !Ref DependenciesLayer
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /package/byName/{name}
            Method: get
            RequestParameters:
              method.request.path.name: true
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref PackageHistoryTable

  PackageByRegExRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns: # Attach AWS Managed Policies
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
        - arn:aws:iam::aws:policy/AmazonOpenSearchServiceFullAccess
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  PackageByRegEx:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      Runtime: nodejs18.x
      CodeUri: dist/handlers/PackageByRegEx
      MemorySize: 128
      Timeout: 30
      Layers:
        - !Ref DependenciesLayer
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /package/byRegEx
            Method: post
      Role: !GetAtt PackageByRegExRole.Arn
      Environment:
        Variables:
          DOMAIN_ENDPOINT: !GetAtt MyOpenSearchDomain.DomainEndpoint

  GetTracks:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      Runtime: nodejs18.x
      CodeUri: dist/handlers/GetTracks
      MemorySize: 128
      Timeout: 30
      Layers:
        - !Ref DependenciesLayer
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /tracks
            Method: get

Outputs:
  ApiUrl:
    Description: "API Gateway endpoint URL"
    Value: !Sub "https://${MyApi}.execute-api.${AWS::Region}.amazonaws.com/${Stage}/"
  OpenSearchDomainEndpoint:
    Description: "The endpoint of the OpenSearch domain"
    Value: !GetAtt MyOpenSearchDomain.DomainEndpoint

Parameters:
  Stage:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - prod
    Description: Stage name
